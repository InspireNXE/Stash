plugins {
  id "java"
  id "maven"
  id "signing"
  id "com.github.hierynomus.license" version "0.12.1"
}

defaultTasks 'clean', 'licenseFormat', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

archivesBaseName = project.name.toLowerCase()
version = "${project.version}"

repositories {
    mavenCentral()
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/repositories/public/'
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.18'
    compile 'ninja.leaping.configurate:configurate-core:3.1.1'
    compile 'ninja.leaping.configurate:configurate-hocon:3.1.1'
}

configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
}

license {
    ext {
        name = project.name
        organization = project.organization
        url = project.url
    }
    header = rootProject.file('HEADER.txt')
    ignoreFailures = false
    strictCheck = true
    include '**/*.java'
    mapping {
        java = 'SLASHSTAR_STYLE'
    }    
}

jar {
    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': System.properties['java.vm.version'] + ' (' + System.properties['java.vm.vendor'] + ')',
            'Implementation-Title': project.name,
            'Implementation-Version': version,
            'Implementation-Vendor': url
        )
    }
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


artifacts {
    archives sourceJar
    archives javadocJar
}

uploadArchives {
    repositories.mavenDeployer {
        if (version.endsWith('-SNAPSHOT')) {
            ext.sonatypeUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
        } else {
            ext.sonatypeUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'

            signing {
                required { gradle.taskGraph.hasTask("uploadArchives") }

                sign configurations.archives

                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            }
        }

        repository(url: sonatypeUrl) {
            authentication(userName: System.getenv("SONATYPE_USERNAME"), password: System.getenv("SONATYPE_PASSWORD"))
        }

        pom.project {
            name = project.name
            artifactId = archivesBaseName
            packaging = 'jar'
            url project.url

            scm {
                connection 'scm:git:git://github.com/InspireNXE/Stash.git'
                developerConnection 'scm:git:ssh://git@github.com:InspireNXE/Stash.git'
                url 'https://github.com/InspireNXE/Stash'
            }

            licenses {
                license {
                    name 'The MIT License'
                    url 'http://www.tldrlegal.com/license/mit-license'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'Zidane'
                    name 'Chris Sanders'
                    email 'zidane@outlook.com'
                }
                developer {
                    id 'Grinch'
                    name 'Steven Downer'
                    email 'grinch@outlook.com'
                }
            }

            organization {
                name organization
                url url
            }

            issueManagement {
                system 'github'
                url 'https://github.com/InspireNXE/Stash/issues'
            }
        }
    }
}
